/**
 * ByteBuffer v0.0.1
 * Copyright (c) 2012 Tim Kurvers <http://moonsphere.net>
 *
 * Wrapper for ArrayBuffer/DataView maintaining index and default endianness.
 * Supports arbitrary reading/writing, automatic growth, slicing, cloning and
 * reversing as well as UTF-8 characters and NULL-terminated C-strings.
 *
 * The contents of this file are subject to the MIT License, under which
 * this library is licensed. See the LICENSE file for the full license.
 */

// Generated by CoffeeScript 1.3.3
var ByteBuffer;

ByteBuffer = (function() {
  var getter, setter,
    _this = this;

  getter = function(name, getter) {
    return Object.defineProperty(ByteBuffer.prototype, name, {
      get: getter,
      enumerable: true,
      configurable: true
    });
  };

  setter = function(name, setter) {
    return Object.defineProperty(ByteBuffer.prototype, name, {
      set: setter,
      enumerable: true,
      configurable: true
    });
  };

  function ByteBuffer(source) {
    if (source == null) {
      source = 0;
    }
    this._buffer = null;
    this._view = null;
    if (source.byteLength != null) {
      if (source.buffer != null) {
        this._buffer = source.buffer.slice(0);
      } else {
        this._buffer = source.slice(0);
      }
    } else {
      this._buffer = new ArrayBuffer(source);
    }
    this._view = new DataView(this._buffer);
  }

  getter('buffer', function() {
    return this._buffer;
  });

  getter('view', function() {
    return this._view;
  });

  getter('length', function() {
    return this._buffer.byteLength;
  });

  getter('byteLength', function() {
    return this.length;
  });

  return ByteBuffer;

}).call(this);
